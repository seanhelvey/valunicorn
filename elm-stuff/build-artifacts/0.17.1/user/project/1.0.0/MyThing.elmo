var _user$project$MyThing$check = _elm_lang$core$Native_Platform.outgoingPort(
	'check',
	function (v) {
		return v;
	});
var _user$project$MyThing$suggestions = _elm_lang$core$Native_Platform.incomingPort('suggestions', _elm_lang$core$Json_Decode$string);
var _user$project$MyThing$Model = F3(
	function (a, b, c) {
		return {input1: a, input2: b, suggestions: c};
	});
var _user$project$MyThing$init = {
	ctor: '_Tuple2',
	_0: A3(_user$project$MyThing$Model, 0.0, 0.0, ''),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$MyThing$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'SetInput1':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							input1: A2(
								_elm_lang$core$Result$withDefault,
								0,
								_elm_lang$core$String$toFloat(_p0._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SetInput2':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							input2: A2(
								_elm_lang$core$Result$withDefault,
								0,
								_elm_lang$core$String$toFloat(_p0._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Check':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$MyThing$check(model.input1 + model.input2)
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: A3(_user$project$MyThing$Model, model.input1, model.input2, _p0._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$MyThing$Suggest = function (a) {
	return {ctor: 'Suggest', _0: a};
};
var _user$project$MyThing$subscriptions = function (model) {
	return _user$project$MyThing$suggestions(_user$project$MyThing$Suggest);
};
var _user$project$MyThing$Check = {ctor: 'Check'};
var _user$project$MyThing$SetInput2 = function (a) {
	return {ctor: 'SetInput2', _0: a};
};
var _user$project$MyThing$SetInput1 = function (a) {
	return {ctor: 'SetInput1', _0: a};
};
var _user$project$MyThing$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onInput(_user$project$MyThing$SetInput1)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onInput(_user$project$MyThing$SetInput2)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$MyThing$Check)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Check')
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(model.suggestions)
					]))
			]));
};
var _user$project$MyThing$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$MyThing$init, view: _user$project$MyThing$view, update: _user$project$MyThing$update, subscriptions: _user$project$MyThing$subscriptions})
};
