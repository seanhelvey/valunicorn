var _mgold$elm_random_pcg$Random_Pcg$toJson = function (_p0) {
	var _p1 = _p0;
	return _elm_lang$core$Json_Encode$list(
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$core$Json_Encode$int(_p1._0),
				_elm_lang$core$Json_Encode$int(_p1._1)
			]));
};
var _mgold$elm_random_pcg$Random_Pcg$mul32 = F2(
	function (a, b) {
		var bl = A2(_elm_lang$core$Bitwise$and, b, 65535);
		var bh = A2(
			_elm_lang$core$Bitwise$and,
			A2(_elm_lang$core$Bitwise$shiftRightLogical, b, 16),
			65535);
		var al = A2(_elm_lang$core$Bitwise$and, a, 65535);
		var ah = A2(
			_elm_lang$core$Bitwise$and,
			A2(_elm_lang$core$Bitwise$shiftRightLogical, a, 16),
			65535);
		return A2(
			_elm_lang$core$Bitwise$or,
			0,
			(al * bl) + A2(
				_elm_lang$core$Bitwise$shiftRightLogical,
				A2(_elm_lang$core$Bitwise$shiftLeft, (ah * bl) + (al * bh), 16),
				0));
	});
var _mgold$elm_random_pcg$Random_Pcg$listHelp = F4(
	function (list, n, generate, seed) {
		listHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 1) < 0) {
				return {ctor: '_Tuple2', _0: list, _1: seed};
			} else {
				var _p2 = generate(seed);
				var value = _p2._0;
				var newSeed = _p2._1;
				var _v1 = A2(_elm_lang$core$List_ops['::'], value, list),
					_v2 = n - 1,
					_v3 = generate,
					_v4 = newSeed;
				list = _v1;
				n = _v2;
				generate = _v3;
				seed = _v4;
				continue listHelp;
			}
		}
	});
var _mgold$elm_random_pcg$Random_Pcg$minInt = -2147483648;
var _mgold$elm_random_pcg$Random_Pcg$maxInt = 2147483647;
var _mgold$elm_random_pcg$Random_Pcg$bit27 = 1.34217728e8;
var _mgold$elm_random_pcg$Random_Pcg$bit53 = 9.007199254740992e15;
var _mgold$elm_random_pcg$Random_Pcg$peel = function (_p3) {
	var _p4 = _p3;
	var _p5 = _p4._0;
	var word = A2(
		_elm_lang$core$Bitwise$xor,
		A2(
			_elm_lang$core$Bitwise$shiftRightLogical,
			_p5,
			A2(_elm_lang$core$Bitwise$shiftRightLogical, _p5, 28) + 4),
		_p5) * 277803737;
	return A2(
		_elm_lang$core$Bitwise$shiftRightLogical,
		A2(
			_elm_lang$core$Bitwise$xor,
			A2(_elm_lang$core$Bitwise$shiftRightLogical, word, 22),
			word),
		0);
};
var _mgold$elm_random_pcg$Random_Pcg$never = function (a) {
	never:
	while (true) {
		var _v6 = a;
		a = _v6;
		continue never;
	}
};
var _mgold$elm_random_pcg$Random_Pcg$step = F2(
	function (_p6, seed) {
		var _p7 = _p6;
		return _p7._0(seed);
	});
var _mgold$elm_random_pcg$Random_Pcg$Generator = function (a) {
	return {ctor: 'Generator', _0: a};
};
var _mgold$elm_random_pcg$Random_Pcg$list = F2(
	function (n, _p8) {
		var _p9 = _p8;
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed) {
				return A4(
					_mgold$elm_random_pcg$Random_Pcg$listHelp,
					_elm_lang$core$Native_List.fromArray(
						[]),
					n,
					_p9._0,
					seed);
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$constant = function (value) {
	return _mgold$elm_random_pcg$Random_Pcg$Generator(
		function (seed) {
			return {ctor: '_Tuple2', _0: value, _1: seed};
		});
};
var _mgold$elm_random_pcg$Random_Pcg$map = F2(
	function (func, _p10) {
		var _p11 = _p10;
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed0) {
				var _p12 = _p11._0(seed0);
				var a = _p12._0;
				var seed1 = _p12._1;
				return {
					ctor: '_Tuple2',
					_0: func(a),
					_1: seed1
				};
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$map2 = F3(
	function (func, _p14, _p13) {
		var _p15 = _p14;
		var _p16 = _p13;
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed0) {
				var _p17 = _p15._0(seed0);
				var a = _p17._0;
				var seed1 = _p17._1;
				var _p18 = _p16._0(seed1);
				var b = _p18._0;
				var seed2 = _p18._1;
				return {
					ctor: '_Tuple2',
					_0: A2(func, a, b),
					_1: seed2
				};
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$pair = F2(
	function (genA, genB) {
		return A3(
			_mgold$elm_random_pcg$Random_Pcg$map2,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			genA,
			genB);
	});
var _mgold$elm_random_pcg$Random_Pcg$andMap = _mgold$elm_random_pcg$Random_Pcg$map2(
	F2(
		function (x, y) {
			return x(y);
		}));
var _mgold$elm_random_pcg$Random_Pcg$map3 = F4(
	function (func, _p21, _p20, _p19) {
		var _p22 = _p21;
		var _p23 = _p20;
		var _p24 = _p19;
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed0) {
				var _p25 = _p22._0(seed0);
				var a = _p25._0;
				var seed1 = _p25._1;
				var _p26 = _p23._0(seed1);
				var b = _p26._0;
				var seed2 = _p26._1;
				var _p27 = _p24._0(seed2);
				var c = _p27._0;
				var seed3 = _p27._1;
				return {
					ctor: '_Tuple2',
					_0: A3(func, a, b, c),
					_1: seed3
				};
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$map4 = F5(
	function (func, _p31, _p30, _p29, _p28) {
		var _p32 = _p31;
		var _p33 = _p30;
		var _p34 = _p29;
		var _p35 = _p28;
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed0) {
				var _p36 = _p32._0(seed0);
				var a = _p36._0;
				var seed1 = _p36._1;
				var _p37 = _p33._0(seed1);
				var b = _p37._0;
				var seed2 = _p37._1;
				var _p38 = _p34._0(seed2);
				var c = _p38._0;
				var seed3 = _p38._1;
				var _p39 = _p35._0(seed3);
				var d = _p39._0;
				var seed4 = _p39._1;
				return {
					ctor: '_Tuple2',
					_0: A4(func, a, b, c, d),
					_1: seed4
				};
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$map5 = F6(
	function (func, _p44, _p43, _p42, _p41, _p40) {
		var _p45 = _p44;
		var _p46 = _p43;
		var _p47 = _p42;
		var _p48 = _p41;
		var _p49 = _p40;
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed0) {
				var _p50 = _p45._0(seed0);
				var a = _p50._0;
				var seed1 = _p50._1;
				var _p51 = _p46._0(seed1);
				var b = _p51._0;
				var seed2 = _p51._1;
				var _p52 = _p47._0(seed2);
				var c = _p52._0;
				var seed3 = _p52._1;
				var _p53 = _p48._0(seed3);
				var d = _p53._0;
				var seed4 = _p53._1;
				var _p54 = _p49._0(seed4);
				var e = _p54._0;
				var seed5 = _p54._1;
				return {
					ctor: '_Tuple2',
					_0: A5(func, a, b, c, d, e),
					_1: seed5
				};
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$andThen = F2(
	function (_p55, callback) {
		var _p56 = _p55;
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed) {
				var _p57 = _p56._0(seed);
				var result = _p57._0;
				var newSeed = _p57._1;
				var _p58 = callback(result);
				var generateB = _p58._0;
				return generateB(newSeed);
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$filter = F2(
	function (predicate, generator) {
		return A2(
			_mgold$elm_random_pcg$Random_Pcg$andThen,
			generator,
			function (a) {
				return predicate(a) ? _mgold$elm_random_pcg$Random_Pcg$constant(a) : A2(_mgold$elm_random_pcg$Random_Pcg$filter, predicate, generator);
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$maybe = F2(
	function (genBool, genA) {
		return A2(
			_mgold$elm_random_pcg$Random_Pcg$andThen,
			genBool,
			function (b) {
				return b ? A2(_mgold$elm_random_pcg$Random_Pcg$map, _elm_lang$core$Maybe$Just, genA) : _mgold$elm_random_pcg$Random_Pcg$constant(_elm_lang$core$Maybe$Nothing);
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$Seed = F2(
	function (a, b) {
		return {ctor: 'Seed', _0: a, _1: b};
	});
var _mgold$elm_random_pcg$Random_Pcg$next = function (_p59) {
	var _p60 = _p59;
	var _p61 = _p60._1;
	return A2(
		_mgold$elm_random_pcg$Random_Pcg$Seed,
		A2(_elm_lang$core$Bitwise$shiftRightLogical, (_p60._0 * 1664525) + _p61, 0),
		_p61);
};
var _mgold$elm_random_pcg$Random_Pcg$initialSeed = function (x) {
	var _p62 = _mgold$elm_random_pcg$Random_Pcg$next(
		A2(_mgold$elm_random_pcg$Random_Pcg$Seed, 0, 1013904223));
	var state1 = _p62._0;
	var incr = _p62._1;
	var state2 = A2(_elm_lang$core$Bitwise$shiftRightLogical, state1 + x, 0);
	return _mgold$elm_random_pcg$Random_Pcg$next(
		A2(_mgold$elm_random_pcg$Random_Pcg$Seed, state2, incr));
};
var _mgold$elm_random_pcg$Random_Pcg$generate = F2(
	function (toMsg, generator) {
		return A3(
			_elm_lang$core$Task$perform,
			_mgold$elm_random_pcg$Random_Pcg$never,
			toMsg,
			A2(
				_elm_lang$core$Task$map,
				function (_p63) {
					return _elm_lang$core$Basics$fst(
						A2(
							_mgold$elm_random_pcg$Random_Pcg$step,
							generator,
							_mgold$elm_random_pcg$Random_Pcg$initialSeed(
								_elm_lang$core$Basics$round(_p63))));
				},
				_elm_lang$core$Time$now));
	});
var _mgold$elm_random_pcg$Random_Pcg$int = F2(
	function (a, b) {
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed0) {
				var _p64 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};
				var lo = _p64._0;
				var hi = _p64._1;
				var range = (hi - lo) + 1;
				if (_elm_lang$core$Native_Utils.eq(
					A2(_elm_lang$core$Bitwise$and, range, range - 1),
					0)) {
					return {
						ctor: '_Tuple2',
						_0: A2(
							_elm_lang$core$Bitwise$shiftRightLogical,
							A2(
								_elm_lang$core$Bitwise$and,
								_mgold$elm_random_pcg$Random_Pcg$peel(seed0),
								range - 1),
							0) + lo,
						_1: _mgold$elm_random_pcg$Random_Pcg$next(seed0)
					};
				} else {
					var threshhold = A2(
						_elm_lang$core$Bitwise$shiftRightLogical,
						A2(
							_elm_lang$core$Basics$rem,
							A2(_elm_lang$core$Bitwise$shiftRightLogical, 0 - range, 0),
							range),
						0);
					var accountForBias = function (seed) {
						accountForBias:
						while (true) {
							var seedN = _mgold$elm_random_pcg$Random_Pcg$next(seed);
							var x = _mgold$elm_random_pcg$Random_Pcg$peel(seed);
							if (_elm_lang$core$Native_Utils.cmp(x, threshhold) < 0) {
								var _v26 = seedN;
								seed = _v26;
								continue accountForBias;
							} else {
								return {
									ctor: '_Tuple2',
									_0: A2(_elm_lang$core$Basics$rem, x, range) + lo,
									_1: seedN
								};
							}
						}
					};
					return accountForBias(seed0);
				}
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$bool = A2(
	_mgold$elm_random_pcg$Random_Pcg$map,
	F2(
		function (x, y) {
			return _elm_lang$core$Native_Utils.eq(x, y);
		})(1),
	A2(_mgold$elm_random_pcg$Random_Pcg$int, 0, 1));
var _mgold$elm_random_pcg$Random_Pcg$choice = F2(
	function (x, y) {
		return A2(
			_mgold$elm_random_pcg$Random_Pcg$map,
			function (b) {
				return b ? x : y;
			},
			_mgold$elm_random_pcg$Random_Pcg$bool);
	});
var _mgold$elm_random_pcg$Random_Pcg$oneIn = function (n) {
	return A2(
		_mgold$elm_random_pcg$Random_Pcg$map,
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(1),
		A2(_mgold$elm_random_pcg$Random_Pcg$int, 1, n));
};
var _mgold$elm_random_pcg$Random_Pcg$sample = function () {
	var find = F2(
		function (k, ys) {
			find:
			while (true) {
				var _p65 = ys;
				if (_p65.ctor === '[]') {
					return _elm_lang$core$Maybe$Nothing;
				} else {
					if (_elm_lang$core$Native_Utils.eq(k, 0)) {
						return _elm_lang$core$Maybe$Just(_p65._0);
					} else {
						var _v28 = k - 1,
							_v29 = _p65._1;
						k = _v28;
						ys = _v29;
						continue find;
					}
				}
			}
		});
	return function (xs) {
		return A2(
			_mgold$elm_random_pcg$Random_Pcg$map,
			function (i) {
				return A2(find, i, xs);
			},
			A2(
				_mgold$elm_random_pcg$Random_Pcg$int,
				0,
				_elm_lang$core$List$length(xs) - 1));
	};
}();
var _mgold$elm_random_pcg$Random_Pcg$float = F2(
	function (min, max) {
		return _mgold$elm_random_pcg$Random_Pcg$Generator(
			function (seed0) {
				var range = _elm_lang$core$Basics$abs(max - min);
				var n0 = _mgold$elm_random_pcg$Random_Pcg$peel(seed0);
				var hi = _elm_lang$core$Basics$toFloat(
					A2(_elm_lang$core$Bitwise$and, n0, 67108863)) * 1.0;
				var seed1 = _mgold$elm_random_pcg$Random_Pcg$next(seed0);
				var n1 = _mgold$elm_random_pcg$Random_Pcg$peel(seed1);
				var lo = _elm_lang$core$Basics$toFloat(
					A2(_elm_lang$core$Bitwise$and, n1, 134217727)) * 1.0;
				var val = ((hi * _mgold$elm_random_pcg$Random_Pcg$bit27) + lo) / _mgold$elm_random_pcg$Random_Pcg$bit53;
				var scaled = (val * range) + min;
				return {
					ctor: '_Tuple2',
					_0: scaled,
					_1: _mgold$elm_random_pcg$Random_Pcg$next(seed1)
				};
			});
	});
var _mgold$elm_random_pcg$Random_Pcg$frequency = function (pairs) {
	var pick = F2(
		function (choices, n) {
			pick:
			while (true) {
				var _p66 = choices;
				if ((_p66.ctor === '::') && (_p66._0.ctor === '_Tuple2')) {
					var _p67 = _p66._0._0;
					if (_elm_lang$core$Native_Utils.cmp(n, _p67) < 1) {
						return _p66._0._1;
					} else {
						var _v31 = _p66._1,
							_v32 = n - _p67;
						choices = _v31;
						n = _v32;
						continue pick;
					}
				} else {
					return _elm_lang$core$Native_Utils.crashCase(
						'Random.Pcg',
						{
							start: {line: 683, column: 13},
							end: {line: 691, column: 77}
						},
						_p66)('Empty list passed to Random.Pcg.frequency!');
				}
			}
		});
	var total = _elm_lang$core$List$sum(
		A2(
			_elm_lang$core$List$map,
			function (_p69) {
				return _elm_lang$core$Basics$abs(
					_elm_lang$core$Basics$fst(_p69));
			},
			pairs));
	return A2(
		_mgold$elm_random_pcg$Random_Pcg$andThen,
		A2(_mgold$elm_random_pcg$Random_Pcg$float, 0, total),
		pick(pairs));
};
var _mgold$elm_random_pcg$Random_Pcg$choices = function (gens) {
	return _mgold$elm_random_pcg$Random_Pcg$frequency(
		A2(
			_elm_lang$core$List$map,
			function (g) {
				return {ctor: '_Tuple2', _0: 1, _1: g};
			},
			gens));
};
var _mgold$elm_random_pcg$Random_Pcg$independentSeed = _mgold$elm_random_pcg$Random_Pcg$Generator(
	function (seed0) {
		var gen = A2(_mgold$elm_random_pcg$Random_Pcg$int, 0, 4294967295);
		var _p70 = A2(
			_mgold$elm_random_pcg$Random_Pcg$step,
			A4(
				_mgold$elm_random_pcg$Random_Pcg$map3,
				F3(
					function (v0, v1, v2) {
						return {ctor: '_Tuple3', _0: v0, _1: v1, _2: v2};
					}),
				gen,
				gen,
				gen),
			seed0);
		var state = _p70._0._0;
		var b = _p70._0._1;
		var c = _p70._0._2;
		var seed1 = _p70._1;
		var incr = A2(
			_elm_lang$core$Bitwise$and,
			A2(_elm_lang$core$Bitwise$xor, b, c),
			1);
		return {
			ctor: '_Tuple2',
			_0: seed1,
			_1: _mgold$elm_random_pcg$Random_Pcg$next(
				A2(_mgold$elm_random_pcg$Random_Pcg$Seed, state, incr))
		};
	});
var _mgold$elm_random_pcg$Random_Pcg$fastForward = F2(
	function (delta0, _p71) {
		var _p72 = _p71;
		var _p75 = _p72._1;
		var helper = F6(
			function (accMult, accPlus, curMult, curPlus, delta, repeat) {
				helper:
				while (true) {
					var newDelta = A2(_elm_lang$core$Bitwise$shiftRightLogical, delta, 1);
					var curMult$ = A2(_mgold$elm_random_pcg$Random_Pcg$mul32, curMult, curMult);
					var curPlus$ = A2(_mgold$elm_random_pcg$Random_Pcg$mul32, curMult + 1, curPlus);
					var _p73 = _elm_lang$core$Native_Utils.eq(
						A2(_elm_lang$core$Bitwise$and, delta, 1),
						1) ? {
						ctor: '_Tuple2',
						_0: A2(_mgold$elm_random_pcg$Random_Pcg$mul32, accMult, curMult),
						_1: A2(
							_elm_lang$core$Bitwise$shiftRightLogical,
							A2(_mgold$elm_random_pcg$Random_Pcg$mul32, accPlus, curMult) + curPlus,
							0)
					} : {ctor: '_Tuple2', _0: accMult, _1: accPlus};
					var accMult$ = _p73._0;
					var accPlus$ = _p73._1;
					if (_elm_lang$core$Native_Utils.eq(newDelta, 0)) {
						if ((_elm_lang$core$Native_Utils.cmp(delta0, 0) < 0) && repeat) {
							var _v34 = accMult$,
								_v35 = accPlus$,
								_v36 = curMult$,
								_v37 = curPlus$,
								_v38 = -1,
								_v39 = false;
							accMult = _v34;
							accPlus = _v35;
							curMult = _v36;
							curPlus = _v37;
							delta = _v38;
							repeat = _v39;
							continue helper;
						} else {
							return {ctor: '_Tuple2', _0: accMult$, _1: accPlus$};
						}
					} else {
						var _v40 = accMult$,
							_v41 = accPlus$,
							_v42 = curMult$,
							_v43 = curPlus$,
							_v44 = newDelta,
							_v45 = repeat;
						accMult = _v40;
						accPlus = _v41;
						curMult = _v42;
						curPlus = _v43;
						delta = _v44;
						repeat = _v45;
						continue helper;
					}
				}
			});
		var _p74 = A6(helper, 1, 0, 1664525, _p75, delta0, true);
		var accMultFinal = _p74._0;
		var accPlusFinal = _p74._1;
		return A2(
			_mgold$elm_random_pcg$Random_Pcg$Seed,
			A2(
				_elm_lang$core$Bitwise$shiftRightLogical,
				A2(_mgold$elm_random_pcg$Random_Pcg$mul32, accMultFinal, _p72._0) + accPlusFinal,
				0),
			_p75);
	});
var _mgold$elm_random_pcg$Random_Pcg$fromJson = _elm_lang$core$Json_Decode$oneOf(
	_elm_lang$core$Native_List.fromArray(
		[
			A3(_elm_lang$core$Json_Decode$tuple2, _mgold$elm_random_pcg$Random_Pcg$Seed, _elm_lang$core$Json_Decode$int, _elm_lang$core$Json_Decode$int),
			A2(_elm_lang$core$Json_Decode$map, _mgold$elm_random_pcg$Random_Pcg$initialSeed, _elm_lang$core$Json_Decode$int)
		]));
