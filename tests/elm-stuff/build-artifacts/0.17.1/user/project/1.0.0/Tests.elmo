var _user$project$Tests$all = A2(
	_elm_community$elm_test$Test$describe,
	'The Calculator Module',
	_elm_lang$core$Native_List.fromArray(
		[
			A2(
			_elm_community$elm_test$Test$describe,
			'futureValue',
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_community$elm_test$Test$test,
					'Zero periods',
					function (_p0) {
						var _p1 = _p0;
						return A2(
							_elm_community$elm_test$Expect$equal,
							A5(_user$project$Calculator$futureValue, 0.0, 0.0, 2.65, 6.2e-2, 0),
							2.65);
					}),
					A2(
					_elm_community$elm_test$Test$test,
					'One period',
					function (_p2) {
						var _p3 = _p2;
						return A2(
							_elm_community$elm_test$Expect$equal,
							A5(_user$project$Calculator$futureValue, 0.0, 0.0, 2.65, 6.2e-2, 1),
							2.8143000000000002);
					}),
					A2(
					_elm_community$elm_test$Test$test,
					'Five periods',
					function (_p4) {
						var _p5 = _p4;
						return A2(
							_elm_community$elm_test$Expect$equal,
							A5(_user$project$Calculator$futureValue, 0.0, 0.0, 2.65, 6.2e-2, 5),
							15.927942909494408);
					}),
					A2(
					_elm_community$elm_test$Test$test,
					'Ten periods',
					function (_p6) {
						var _p7 = _p6;
						return A2(
							_elm_community$elm_test$Expect$equal,
							A5(_user$project$Calculator$futureValue, 0.0, 0.0, 2.65, 6.2e-2, 10.0),
							37.44497036944294);
					})
				])),
			A2(
			_elm_community$elm_test$Test$describe,
			'rateOfReturn',
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_community$elm_test$Test$test,
					'Zero periods',
					function (_p8) {
						var _p9 = _p8;
						return A2(
							_elm_community$elm_test$Expect$equal,
							A6(_user$project$Calculator$rateOfReturn, 0.0, 0.0, 2.65, 6.2e-2, 0, 82),
							3.231707317073171e-2);
					}),
					A2(
					_elm_community$elm_test$Test$test,
					'One period',
					function (_p10) {
						var _p11 = _p10;
						return A2(
							_elm_community$elm_test$Expect$equal,
							A6(_user$project$Calculator$rateOfReturn, 0.0, 0.0, 2.65, 6.2e-2, 1, 82),
							3.432073170731709e-2);
					}),
					A2(
					_elm_community$elm_test$Test$test,
					'Five periods',
					function (_p12) {
						var _p13 = _p12;
						return A2(
							_elm_community$elm_test$Expect$equal,
							A6(_user$project$Calculator$rateOfReturn, 0.0, 0.0, 2.65, 6.2e-2, 5, 82),
							3.614027671403286e-2);
					}),
					A2(
					_elm_community$elm_test$Test$test,
					'Ten periods',
					function (_p14) {
						var _p15 = _p14;
						return A2(
							_elm_community$elm_test$Expect$equal,
							A6(_user$project$Calculator$rateOfReturn, 0.0, 0.0, 2.65, 6.2e-2, 10.0, 82),
							3.832999855794661e-2);
					})
				])),
			A2(
			_elm_community$elm_test$Test$describe,
			'update',
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_community$elm_test$Test$test,
					'SetPurchasePrice',
					function (_p16) {
						var _p17 = _p16;
						var company = _user$project$Calculator$initialModel.company;
						var newCompany = _elm_lang$core$Native_Utils.update(
							company,
							{purchasePrice: 30});
						var newModel = _elm_lang$core$Native_Utils.update(
							_user$project$Calculator$initialModel,
							{company: newCompany});
						return A2(
							_elm_community$elm_test$Expect$equal,
							A2(
								_user$project$Calculator$update,
								_user$project$Calculator$SetPurchasePrice('30'),
								_user$project$Calculator$initialModel),
							newModel);
					})
				]))
		]));
